/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dev.mike.ui;

import com.auth0.jwt.JWT;
import com.auth0.jwt.exceptions.JWTDecodeException;
import com.auth0.jwt.interfaces.DecodedJWT;
import dev.mike.core.authentication.AuthenticationService;
import dev.mike.core.authentication.User;
import dev.mike.core.search.SearchService;
import dev.mike.core.search.Summer;
import dev.mike.infrastructure.authentication.SignInFacade;
import dev.mike.infrastructure.authentication.repository.ConfigurationRepository;
import dev.mike.infrastructure.authentication.repository.UserRepository;
import dev.mike.infrastructure.inMemory.Cookie;
import dev.mike.infrastructure.inMemory.Token;
import dev.mike.infrastructure.search.SearchFacade;
import dev.mike.infrastructure.store.ExecuteQuery;
import dev.mike.infrastructure.store.Init;
import dev.mike.tool.validation.StringEmpty;

import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import org.jd.gui.util.swing.SwingUtil;

/**
 * @author Usuario
 */
public class Board extends javax.swing.JFrame implements BoardAction {

    private AuthenticationService authenticationService;
    private SearchService searchService;
    private UserRepository userRepository;
    private ConfigurationRepository configurationRepository;

    private User user;

    /**
     * Creates new form NewJFrame
     */
    public Board() {
        setLocationRelativeTo(null);

        initComponents();
        initViewPortScrollPanel();

        new Thread(() -> {
            ExecuteQuery databaseConnection = new ExecuteQuery();

            this.userRepository = new UserRepository(databaseConnection);
            this.configurationRepository = new ConfigurationRepository(databaseConnection);
            this.authenticationService = new AuthenticationService(userRepository, new SignInFacade(userRepository, configurationRepository), configurationRepository);
            this.searchService = new SearchService(new SearchFacade(configurationRepository));

            this.initUserSession();
        }).start();

    }

    private void initViewPortScrollPanel() {
        JPanel containerCard = new JPanel();
        containerCard.setLayout(new BoxLayout(containerCard, BoxLayout.Y_AXIS));
        this.scrollPanel.setViewportView(containerCard);
    }

    public void openClassName(String className) {
        try {
            OpenJDGUI.loadClassName(configurationRepository, className);
        } catch (Exception e) {

        }
        //this.panelCode.setViewportView(new EditorCode(className, configurationRepository));
        //this.panelCode.repaint();
        //this.panelCode.revalidate();
    }

    public void refreshSession() {
        this.initUserSession();
    }

    private void initUserSession() {
        this.user = this.userRepository.getUser();
        if (this.user.getUser() == null) {
            return;
        }

        this.lblSignIn.setText(this.user.getUser());
        if (this.user.getToken() == null) {
            return;
        }
        try {
            Cookie.COOKIE = this.user.getCookie();

            DecodedJWT decodedJWT = JWT.decode(this.user.getToken());
            if (decodedJWT.getExpiresAt() == null) {
                System.out.println("No expiration time set in the token.");
                return;
            }
            System.out.println("Expiration time");
            Token.TOKEN_AUTHENTICATION = this.user.getToken();
            if (!authenticationService.validateToken()) {
                authenticationService.signIn(User.authenticate(this.user.getUser(), this.user.getPassword()), true);
            }

        } catch (JWTDecodeException exception) {
            // Invalid token
            System.err.println("Invalid token: " + exception.getMessage());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public void removeCard(Card card) {
        ((JPanel) this.scrollPanel.getViewport().getView()).remove(card);
        this.scrollPanel.repaint();
        this.scrollPanel.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSignIn = new javax.swing.JLabel();
        inputUrl = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        scrollPanel = new javax.swing.JScrollPane();
        panelCode = new javax.swing.JScrollPane();
        lblConfiguration = new javax.swing.JLabel();
        lblRemoveAll = new javax.swing.JLabel();
        lblModifyJar = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(241, 241, 241));

        lblSignIn.setText("Sign In");
        lblSignIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblSignInMouseClicked(evt);
            }
        });

        inputUrl.setToolTipText("");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        scrollPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        panelCode.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblConfiguration.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblConfiguration.setForeground(new java.awt.Color(0, 153, 153));
        lblConfiguration.setText("Configuration");
        lblConfiguration.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblConfigurationMouseClicked(evt);
            }
        });

        lblRemoveAll.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblRemoveAll.setText("Remove All");
        lblRemoveAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblRemoveAllMouseClicked(evt);
            }
        });

        lblModifyJar.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        lblModifyJar.setForeground(new java.awt.Color(0, 153, 153));
        lblModifyJar.setText("Modify Jar");
        lblModifyJar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblModifyJarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblConfiguration)
                        .addGap(18, 18, 18)
                        .addComponent(lblModifyJar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblSignIn)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputUrl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSearch))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblRemoveAll)
                                    .addComponent(scrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(panelCode, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSignIn)
                    .addComponent(lblConfiguration)
                    .addComponent(lblModifyJar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(inputUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRemoveAll)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                    .addComponent(panelCode))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblSignInMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblSignInMouseClicked
        SignIn dialog = new SignIn(this, authenticationService, this.user, this);
        dialog.pack();
        dialog.setVisible(true);
        dialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                initUserSession();
            }
        });
    }//GEN-LAST:event_lblSignInMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:s
        String inputUrlValue = inputUrl.getText().trim();
        StringEmpty stringEmpty = new StringEmpty(inputUrlValue, "URl must not be empty.");
        if (stringEmpty.isWrong()) {
            JOptionPane.showMessageDialog(null, stringEmpty.getMessage(), "Message", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            Summer summer = searchService.search(inputUrlValue);
//            ObjectService objectService = new ObjectService();
//            objectService.setName("getList");
//            objectService.setLink("");
//            objectService.setMappedTo("mmmm");
//            objectService.setPreprocessors(Arrays.asList("com.temenos.infinity.api.holdings.javaservice.GetAccountPendingAndPostedTransactionsOperation", "Dos", "Tres", "Cuatro", "Cinco", "Seis", "Siete", "Uno", "Dos", "Tres", "Cuatro", "Cinco", "Seis", "Siete", "Uno", "Dos", "Tres", "Cuatro", "Cinco", "Seis", "Siete"));
//            objectService.setPostprocessors(Arrays.asList("Uno", "Dos", "Tres"));
//
//            Integration integration = new Integration();
//            integration.setName("Integration");
//            integration.setClassName("com.temenos.dbx.product.contract.backenddelegate.impl.ContractCoreCustomerBackendDelegateImpl");
//            integration.setPreprocessors(Arrays.asList("com.temenos.infinity.api.holdings.javaservice.GetAccountPendingAndPostedTransactionsOperation", "Dos", "Tres"));
//            integration.setPostprocessors(Arrays.asList("Uno", "Dos", "Tres"));
//
//            Summer summer = new Summer(objectService, integration);
            ((JPanel) this.scrollPanel.getViewport().getView()).add(new Card(summer, this));

            this.scrollPanel.repaint();
            this.scrollPanel.revalidate();
        } catch (Exception exception) {
            exception.printStackTrace();
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void lblConfigurationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblConfigurationMouseClicked
        JDialog dialog = new ConfigurationDialog(this, configurationRepository);
        dialog.setLayout(new BorderLayout());
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
        dialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {

            }
        });
    }//GEN-LAST:event_lblConfigurationMouseClicked

    private void lblRemoveAllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblRemoveAllMouseClicked
        initViewPortScrollPanel();
    }//GEN-LAST:event_lblRemoveAllMouseClicked

    private void lblModifyJarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblModifyJarMouseClicked
        JDialog dialog = new JarDialog(this, configurationRepository);
        dialog.setLayout(new BorderLayout());
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
        dialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {

            }
        });
    }//GEN-LAST:event_lblModifyJarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Board.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ExecuteQuery databaseConnection = new ExecuteQuery();
                databaseConnection.execute(new Init());
                
                Board frame = new Board();

                GraphicsEnvironment graphicsEnvironment = GraphicsEnvironment.getLocalGraphicsEnvironment();
                GraphicsDevice graphicsDevice = graphicsEnvironment.getDefaultScreenDevice();
                DisplayMode displayMode = graphicsDevice.getDisplayMode();
                int screenWidth = displayMode.getWidth();
                int screenHeight = displayMode.getHeight();

                // Set the frame to full screen
                frame.getContentPane().setBackground(new Color(241, 241, 241));
                frame.setSize(screenWidth, screenHeight);
                frame.setExtendedState(JFrame.MAXIMIZED_BOTH);
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JTextField inputUrl;
    private javax.swing.JLabel lblConfiguration;
    private javax.swing.JLabel lblModifyJar;
    private javax.swing.JLabel lblRemoveAll;
    private javax.swing.JLabel lblSignIn;
    private javax.swing.JScrollPane panelCode;
    private javax.swing.JScrollPane scrollPanel;
    // End of variables declaration//GEN-END:variables

}
